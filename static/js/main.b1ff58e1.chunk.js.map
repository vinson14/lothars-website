{"version":3,"sources":["static/images/background.jpg","static/images/background-mobile.jpg","GetData.js","App.js","reportWebVitals.js","index.js"],"names":["GetData","load","a","doc","useServiceAccountAuth","creds","loadInfo","sheet","sheetsByIndex","totalDistance","getRows","rows","forEach","row","parseFloat","distance","addDistance","date","Date","day","getDate","month","getMonth","year","getFullYear","addRow","this","sheetId","GoogleSpreadsheet","App","useState","setDistance","setAddDistance","background","bg","setBg","style","backgroundImage","handleWindowResize","window","innerWidth","console","log","backgroundMobile","useEffect","addEventListener","getData","then","response","className","placeholder","type","value","onChange","event","target","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mxFAAe,G,OAAA,IAA0B,wCCA1B,MAA0B,8C,mDCsC1BA,EAlCX,aAAe,IAAD,gCAMdC,KANc,sBAMP,sBAAAC,EAAA,sEACG,EAAKC,IAAIC,sBAAsB,EAAKC,OADvC,uBAEG,EAAKF,IAAIG,WAFZ,OAGH,EAAKC,MAAQ,EAAKJ,IAAIK,cAAc,GAHjC,2CANO,KAYdC,cAZc,sBAYE,8BAAAP,EAAA,sEACK,EAAKK,MAAMG,UADhB,cACRC,EADQ,OAERF,EAAgB,EACpBE,EAAKC,SAAQ,SAACC,GACVJ,GAAiBK,WAAWD,EAAIE,aAJxB,kBAMLN,GANK,2CAZF,KAqBdO,YArBc,uCAqBA,WAAOD,GAAP,qBAAAb,EAAA,6DACNe,EAAO,IAAIC,KACXC,EAAMF,EAAKG,UACXC,EAAQJ,EAAKK,WAAa,EAC1BC,EAAON,EAAKO,cAJN,SAKW,EAAKjB,MAAMkB,OAAO,CACnCR,KAAK,GAAD,OAAKE,EAAL,YAAYE,EAAZ,YAAqBE,GACzBR,SAAUA,IAPJ,uCASH,EAAKN,iBATF,2CArBA,sDACViB,KAAKrB,MAAQA,EACbqB,KAAKC,QAAU,+CACfD,KAAKvB,IAAM,IAAIyB,oBAAkBF,KAAKC,UCkF/BE,MAnFf,WAAe,MAEqBC,mBAAS,cAF9B,mBAEJf,EAFI,KAEMgB,EAFN,OAG2BD,oBAAS,GAHpC,mBAGJd,EAHI,KAGSgB,EAHT,OAISF,mBAASG,GAJlB,mBAIJC,EAJI,KAIAC,EAJA,KAOPC,EAAQ,CAAEC,gBAAgB,OAAD,OAASH,EAAT,MAGvBI,EAAqB,WACnBC,OAAOC,WAAa,KACpBC,QAAQC,IAAIH,OAAOC,YACnBL,EAAMQ,IAENR,EAAMF,IAkCd,OA7BAW,qBAAU,WACNL,OAAOM,iBAAiB,SAAUP,MAItCM,qBAAU,WACN,IAAME,EAAU,IAAI9C,EACpB8C,EACK7C,OACA8C,MAAK,kBAAMD,EAAQrC,mBACnBsC,MAAK,SAACC,GAAD,OAAcjB,EAAY,GAAD,OAAIiB,EAAJ,aAoBnC,qBAAKC,UAAU,MAAMb,MAAOA,EAA5B,SACI,sBAAKa,UAAU,iBAAf,UACI,sBAAKA,UAAU,0CAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,gBAAd,kCACA,qBAAIA,UAAU,WAAd,2BACkB,uBADlB,IAC0BlC,QAG9B,qBAAKkC,UAAU,SAAf,SACI,uBACIC,YAAY,WACZC,KAAK,SACLC,MAAOpC,EACPqC,SAnBH,SAACC,GAClBtB,EAAesB,EAAMC,OAAOH,QAmBRH,UAAU,8GAGlB,qBAAKA,UAAU,cAAf,SACI,wBACIO,QArCH,WACjBzB,EAAY,cACZ,IAAMe,EAAU,IAAI9C,EACpB8C,EACK7C,OACA8C,MAAK,WACFD,EAAQ9B,YAAYA,MAEvB+B,MAAK,SAACC,GAAD,OAAcjB,EAAYiB,MAC/BD,KAAKf,EAAe,MA6BLiB,UAAU,gCAFd,+BAQR,qBAAKA,UAAU,qCCvEhBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b1ff58e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.5b06c3e6.jpg\";","export default __webpack_public_path__ + \"static/media/background-mobile.469798ad.jpg\";","import { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport creds from \"./creds.json\";\n\nclass GetData {\n    constructor() {\n        this.creds = creds;\n        this.sheetId = \"1LecKPSvqSl2zVS5qX2g-P36AZtB23co7VpTc-hczxiU\";\n        this.doc = new GoogleSpreadsheet(this.sheetId);\n    }\n\n    load = async () => {\n        await this.doc.useServiceAccountAuth(this.creds);\n        await this.doc.loadInfo();\n        this.sheet = this.doc.sheetsByIndex[0];\n    };\n\n    totalDistance = async () => {\n        let rows = await this.sheet.getRows();\n        let totalDistance = 0;\n        rows.forEach((row) => {\n            totalDistance += parseFloat(row.distance);\n        });\n        return totalDistance;\n    };\n\n    addDistance = async (distance) => {\n        var date = new Date();\n        var day = date.getDate();\n        var month = date.getMonth() + 1;\n        var year = date.getFullYear();\n        const newRow = await this.sheet.addRow({\n            date: `${day} ${month} ${year}`,\n            distance: distance,\n        });\n        return this.totalDistance();\n    };\n}\n\nexport default GetData;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport background from \"./static/images/background.jpg\";\nimport backgroundMobile from \"./static/images/background-mobile.jpg\";\nimport GetData from \"./GetData\";\n\nfunction App() {\n    // Hooks\n    const [distance, setDistance] = useState(\"Loading...\");\n    const [addDistance, setAddDistance] = useState(false);\n    const [bg, setBg] = useState(background);\n\n    // Setting background\n    let style = { backgroundImage: `url(${bg})` };\n\n    // handle bg for window size\n    const handleWindowResize = () => {\n        if (window.innerWidth < 768) {\n            console.log(window.innerWidth)\n            setBg(backgroundMobile);\n        } else {\n            setBg(background);\n        }\n    };\n\n    // Event listener for window innerwidth\n    useEffect(() => {\n        window.addEventListener(\"resize\", handleWindowResize);\n    });\n\n    // Use effect hooks\n    useEffect(() => {\n        const getData = new GetData();\n        getData\n            .load()\n            .then(() => getData.totalDistance())\n            .then((response) => setDistance(`${response}km`));\n    });\n\n    const handleSubmit = () => {\n        setDistance(\"Loading...\");\n        const getData = new GetData();\n        getData\n            .load()\n            .then(() => {\n                getData.addDistance(addDistance);\n            })\n            .then((response) => setDistance(response))\n            .then(setAddDistance(\"\"));\n    };\n\n    const handleChange = (event) => {\n        setAddDistance(event.target.value);\n    };\n\n    return (\n        <div className=\"App\" style={style}>\n            <div className=\"container mt-5\">\n                <div className=\"row justify-content-center main-content\">\n                    <div className=\"col col-md-6 p-3\">\n                        <h1 className=\"mb-5 pri-font\">Lothars Goes Cycling</h1>\n                        <h4 className=\"pri-font\">\n                            Total Journey <br /> {distance}\n                        </h4>\n                    </div>\n                    <div className=\"col-12\">\n                        <input\n                            placeholder=\"Distance\"\n                            type=\"number\"\n                            value={addDistance}\n                            onChange={handleChange}\n                            className=\"bg-transparent border-top-0 border-left-0 border-right-0 border-bottom border-dark pri-font text-center\"\n                        />\n                    </div>\n                    <div className=\"col-12 py-4\">\n                        <button\n                            onClick={handleSubmit}\n                            className=\"btn btn-outline-dark pri-font\"\n                        >\n                            Add distance\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\"></div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
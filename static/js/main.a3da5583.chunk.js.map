{"version":3,"sources":["static/images/background.jpg","static/images/background-mobile.jpg","GetData.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["GetData","load","a","doc","useServiceAccountAuth","creds","loadInfo","sheet","sheetsByIndex","totalDistance","getRows","rows","forEach","row","parseFloat","distance","addDistance","date","Date","day","getDate","month","getMonth","year","getFullYear","addRow","this","sheetId","GoogleSpreadsheet","Navbar","props","useState","showSidebar","setShowSidebar","toggleSidebar","isMobile","className","onClick","to","exact","App","setDistance","setAddDistance","setIsMobile","setRows","style","backgroundImage","backgroundMobile","background","handleWindowResize","window","innerWidth","useEffect","addEventListener","console","log","getData","then","response","sort","b","basename","placeholder","type","value","onChange","event","target","path","scope","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3da5583.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.5b06c3e6.jpg\";","export default __webpack_public_path__ + \"static/media/background-mobile.469798ad.jpg\";","import { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport creds from \"./creds.json\";\n\nclass GetData {\n    constructor() {\n        this.creds = creds;\n        this.sheetId = \"1LecKPSvqSl2zVS5qX2g-P36AZtB23co7VpTc-hczxiU\";\n        this.doc = new GoogleSpreadsheet(this.sheetId);\n    }\n\n    load = async () => {\n        await this.doc.useServiceAccountAuth(this.creds);\n        await this.doc.loadInfo();\n        this.sheet = this.doc.sheetsByIndex[0];\n    };\n\n    totalDistance = async () => {\n        let rows = await this.sheet.getRows();\n        let totalDistance = 0;\n        rows.forEach((row) => {\n            totalDistance += parseFloat(row.distance);\n        });\n        return { totalDistance: totalDistance, rows: rows };\n    };\n\n    addDistance = async (distance) => {\n        var date = new Date();\n        var day = date.getDate();\n        var month = date.getMonth() + 1;\n        var year = date.getFullYear();\n        const newRow = await this.sheet.addRow({\n            date: `${day} ${month} ${year}`,\n            distance: distance,\n        });\n        return this.totalDistance();\n    };\n}\n\nexport default GetData;\n","import { NavLink } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst Navbar = (props) => {\n    const [showSidebar, setShowSidebar] = useState(false);\n\n    const toggleSidebar = () => {\n        setShowSidebar(!showSidebar);\n    };\n\n    if (props.isMobile) {\n        return (\n            <div className=\"bg-transparent w-100 d-flex justify-content-end p-3\">\n                <button\n                    className=\"btn btn-outline-dark border-0 toggle-btn\"\n                    onClick={toggleSidebar}\n                >\n                    <i className={`fas fa-2x text-dark ${showSidebar ? \"fa-times\": \"fa-bars\"}`} />\n                </button>\n                <div className={`sidebar ${showSidebar ? \"active\" : \"\"}`}>\n                    <NavLink\n                        to=\"/\"\n                        className=\"pri-font text-dark mx-3 p-3\"\n                        exact\n                        onClick={toggleSidebar}\n                    >\n                        Home\n                    </NavLink>\n                    <NavLink\n                        to=\"/log\"\n                        className=\"pri-font text-dark mx-3 p-3\"\n                        exact\n                        onClick={toggleSidebar}\n                    >\n                        Log\n                    </NavLink>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className=\"navbar \">\n            <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                    <NavLink\n                        to=\"/\"\n                        className=\"pri-font text-dark mx-3 p-3\"\n                        exact\n                    >\n                        Home\n                    </NavLink>\n                    <NavLink\n                        to=\"/log\"\n                        className=\"pri-font text-dark mx-3 p-3\"\n                        exact\n                    >\n                        Log\n                    </NavLink>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Navbar;\n","import { useEffect, useState } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport background from \"./static/images/background.jpg\";\nimport backgroundMobile from \"./static/images/background-mobile.jpg\";\nimport GetData from \"./GetData\";\nimport Navbar from \"./Navbar\";\n\nfunction App() {\n    // Hooks\n    const [distance, setDistance] = useState(\"Loading...\");\n    const [addDistance, setAddDistance] = useState(false);\n    const [isMobile, setIsMobile] = useState(false);\n    const [rows, setRows] = useState([]);\n\n    // Setting background\n    let style = {\n        backgroundImage: `url(${isMobile ? backgroundMobile : background})`,\n    };\n\n    // handle bg for window size\n    const handleWindowResize = () => {\n        if (window.innerWidth < 768) {\n            setIsMobile(true);\n        } else {\n            setIsMobile(false);\n        }\n    };\n\n    // Event listener for window innerwidth\n    useEffect(() => {\n        window.addEventListener(\"resize\", handleWindowResize);\n        if (window.innerWidth < 768) {\n            setIsMobile(true);\n        } else {\n            setIsMobile(false);\n        }\n    }, [isMobile]);\n\n    // Use effect hooks\n    useEffect(() => {\n        console.log(\"use effect runs\");\n        const getData = new GetData();\n        getData\n            .load()\n            .then(() => getData.totalDistance())\n            .then((response) => {\n                setDistance(`${response.totalDistance}km`);\n                setRows(response.rows.sort((a, b) => a.date < b.date));\n            });\n    }, [distance]);\n\n    const handleSubmit = () => {\n        setDistance(\"Loading...\");\n        const getData = new GetData();\n        getData\n            .load()\n            .then(() => {\n                getData.addDistance(addDistance);\n            })\n            .then((response) => setDistance(response))\n            .then(setAddDistance(\"\"));\n    };\n\n    const handleChange = (event) => {\n        setAddDistance(event.target.value);\n    };\n\n    return (\n        <Router basename=\"/\">\n            <div className=\"App\" style={style}>\n                <Navbar isMobile={isMobile} />\n                <div className=\"container mt-5\">\n                    <div className=\"row justify-content-center main-content\">\n                        <div className=\"col col-md-6 p-3\">\n                            <h1 className=\"mb-5 pri-font\">\n                                Lothars Goes Cycling\n                            </h1>\n                            <h4 className=\"pri-font\">\n                                Total Journey <br /> {distance}\n                            </h4>\n                        </div>\n                        <div className=\"col-12\">\n                            <input\n                                placeholder=\"Distance\"\n                                type=\"number\"\n                                value={addDistance}\n                                onChange={handleChange}\n                                className=\"bg-transparent border-top-0 border-left-0 border-right-0 border-bottom border-dark pri-font text-center\"\n                            />\n                        </div>\n                        <div className=\"col-12 py-4\">\n                            <button\n                                onClick={handleSubmit}\n                                className=\"btn btn-outline-dark pri-font\"\n                            >\n                                Add distance\n                            </button>\n                        </div>\n                        <Switch>\n                            <Route path=\"/log\">\n                                <div className=\"col-12 py-4\">\n                                    <table className=\"table pri-font\">\n                                        <thead>\n                                            <tr>\n                                                <th\n                                                    scope=\"col\"\n                                                    className=\"pri-font\"\n                                                >\n                                                    Date\n                                                </th>\n                                                <th scope=\"col\">Distance</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {rows.map((row) => (\n                                                <tr key={row.date}>\n                                                    <td>{row.date}</td>\n                                                    <td>{row.distance}km</td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}